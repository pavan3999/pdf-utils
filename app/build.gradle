plugins {
    id 'com.android.application'
    id 'com.github.triplet.play' version '3.4.0-agp4.2'
    id "org.sonarqube" version "3.2.0"
    id 'jacoco'
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.wirehall.pdfutils"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 100
        versionName "1.0.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
        buildConfigField "String", "USERNAME", "\"vivekweb2013\""
        buildConfigField "String", "SOURCE_CODE_URL", "\"https://github.com/vivekweb2013/pdf-utils\""
        buildConfigField "String", "BUG_REPORT_URL", "\"https://github.com/vivekweb2013/pdf-utils/issues\""
        buildConfigField "String", "PRIVACY_POLICY_URL", "\"https://github.com/vivekweb2013/pdf-utils/wiki/Privacy-Policy\""
        buildConfigField "String", "PLAY_STORE_APP_URL", "\"market://details?id=${applicationId}\""
        buildConfigField "String", "PLAY_STORE_WEB_URL", "\"https://play.google.com/store/apps/details?id=${applicationId}\""
        buildConfigField "String", "TWITTER_ACCOUNT_APP_URL", "\"twitter://user?screen_name=vivekweb2013\""
        buildConfigField "String", "TWITTER_ACCOUNT_WEB_URL", "\"https://twitter.com/vivekweb2013\""
    }

    buildTypes {
        release {
                    debuggable false
                    minifyEnabled true
                    shrinkResources true
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    signingConfig signingConfigs.release
                }
            }
        }

        debug {
            debuggable true
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                jacoco.excludes = ['jdk.internal.*']
            }
        }
        unitTests.returnDefaultValues = true
    }
    buildToolsVersion '30.0.3'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code_coverage/debugAndroidTest/connected/*coverage.ec"
    ]))
}

dependencies {
    implementation 'androidx.activity:activity:1.2.3'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.fragment:fragment:1.3.4'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.projectKey", "vivekweb2013_pdf-utils"
        property "sonar.organization", "vivekweb2013"
        property "sonar.host.url", "https://sonarcloud.io"

        property "sonar.language", "java"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java, src/androidTest/java"
        property "sonar.java.coveragePlugin", "jacoco"

        property "sonar.junit.reportsPath", "build/outputs/androidTest-results/connected"
        property "sonar.android.lint.report", "build/outputs/reports/lint-results.xml"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
        property "sonar.binaries", "build/intermediates/javac/debug/classes"
        property "sonar.java.binaries", "build/intermediates/javac/debug/classes"
        property "sonar.java.test.binaries", "build/intermediates/javac/debugAndroidTest/classes"
    }
}
